// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  firstName String
  lastName String
  phone String?
  hash  String
  hashedRt String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Empleado {
  id Int @id @default(autoincrement())
  nombre String
  apellido String
  numero String
  cuit String?
  telefono String?
  direccion String?
  horas Hora[]
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Planta {
  id Int @id @default(autoincrement())
  nombre String
  locacion String?
  contratos Contrato[]
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contrato {
  id            Int                   @id @default(autoincrement())
  nombre        String                @unique
  plantaId Int?
  planta Planta? @relation(fields: [plantaId], references: [id])
  grupo Grupo[]
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Grupo {
  id            Int                   @id @default(autoincrement())
  nombre        String                @unique
  contratoId Int?
  contrato Contrato? @relation(fields: [contratoId], references: [id])
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hora {
  id Int @id @default(autoincrement())
  cantidad Float
  fecha DateTime
  empleadoId Int
  empleado Empleado @relation(fields: [empleadoId], references: [id])
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Novedad {
  id            Int                   @id @default(autoincrement())
  codigo String
  nombre String
  descripcion   String
  referencias   NovedadesReferencias[]
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Referencia {
  id            Int                   @id @default(autoincrement())
  codigo String
  nombre        String                @unique
  descripcion   String
  novedades     NovedadesReferencias[]
  baja Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NovedadesReferencias {
  id            Int                   @id @default(autoincrement())
  novedadId     Int
  referenciaId  Int
  novedad       Novedad    @relation(fields: [novedadId], references: [id], onDelete: Cascade)
  referencia    Referencia @relation(fields: [referenciaId], references: [id], onDelete: Cascade)
}